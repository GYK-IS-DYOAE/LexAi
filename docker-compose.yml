name: lexai

networks:
  lexai_network:
    driver: bridge

services:
  qdrant:
    image: qdrant/qdrant:v1.15.3
    container_name: qdrant
    restart: unless-stopped
    ports: ["6333:6333", "6334:6334"]
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - lexai_network
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:6333/healthz"]
      interval: 10s
      timeout: 3s
      retries: 15

  opensearch:
    image: opensearchproject/opensearch:2.11.1
    container_name: opensearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=LexiAi_1234!
    ulimits:
      memlock: { soft: -1, hard: -1 }
      nofile:  { soft: 65536, hard: 65536 }
    ports: ["9200:9200"]
    volumes:
      - os_data:/usr/share/opensearch/data
    networks:
      - lexai_network

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports: ["11434:11434"]
    volumes:
      - ollama_models:/root/.ollama
    environment:
      - OLLAMA_NUM_PARALLEL=1
      - OLLAMA_HOST=0.0.0.0
    networks:
      - lexai_network
    healthcheck:
      test: ["CMD", "/bin/ollama", "list"]
      interval: 10s
      timeout: 3s
      retries: 15
    entrypoint: ["sh", "-c"]
    command: >
      "/bin/ollama serve & 
      sleep 10 && 
      /bin/ollama pull qwen2.5:1.5b-instruct && 
      tail -f /dev/null"
      
  postgres:
    image: postgres:15
    restart: unless-stopped
    container_name: postgres
    environment:
      POSTGRES_DB: lexai
      POSTGRES_USER: lexuser
      POSTGRES_PASSWORD: lexpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lexai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lexuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  node:
    image: node:22.13.1
    container_name: node
    restart: unless-stopped
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ../LexAi-Frontend:/app
      - node_modules:/app/node_modules   # (opsiyonel ama Ã¶nerilir)
    networks:
      - lexai_network
    command: >
      sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 3000"
    depends_on:
      - postgres
      - qdrant
      - opensearch


volumes:
  qdrant_data:
  os_data:
  ollama_models:
  postgres_data:
  node_modules: